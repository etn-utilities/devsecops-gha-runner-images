name: Build Window Packer Image

on:
  push:
    branches:
      - cem/runnerimage

defaults:
  run:
    shell: pwsh

jobs:
  packer:
    runs-on: self-hosted
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      #   - name: BuildAgentIP
      #     id: BuildAgentIP
      #     run: |
      #       $ipaddress = Invoke-RestMethod -Uri "http://ipinfo.io/ip"
      #       Write-Output "::set-output name=address::$ipaddress"

      - name: packer build
        run: |
          cd images/windows/templates
          packer init ./windows-2022.pkr.hcl
          packer validate ./windows-2022.pkr.hcl
          packer build ./windows-2022.pkr.hcl
        env:
          # ARM_CLIENT_CERT_PATH: ${{ secrets.ARM_CLIENT_CERT_PATH }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          IMAGE_VERSION: ${{ env.GITHUB_RUN_ID }}-dev
          # ARM_RESOURCE_LOCATION: ${{ secrets.ARM_RESOURCE_LOCATION }}
          ARM_RESOURCE_GROUP: ${{ secrets.ARM_RESOURCE_GROUP }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          BUILD_RESOURCE_GROUP_NAME: ${{ secrets.BUILD_RESOURCE_GROUP_NAME }}
          # TEMP_RESOURCE_GROUP_NAME: ${{ secrets.TEMP_RESOURCE_GROUP_NAME }}
          #   ALLOWED_INBOUND_IP_ADRESSES: ${{ steps.BuildAgentIP.outputs.address }}
          VNET_NAME: ${{ secrets.VNET_NAME }}
          VNET_RESOURCE_GROUP: ${{ secrets.VNET_RESOURCE_GROUP }}
          VNET_SUBNET: ${{ secrets.VNET_SUBNET }}
